/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, type Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CharityVault, CharityVaultInterface } from "../CharityVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
    ],
    name: "baseInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "burnNFTAndWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "depositToId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tracker",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "distributeYield",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "_tokenPercent",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "initStrat",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintNewNft",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strat",
    outputs: [
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "vaultAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "withdrawable",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vaultType",
            type: "uint256",
          },
        ],
        internalType: "struct BaseVault.MetaData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDeposits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFromId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawToRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "withdrawableById",
    outputs: [
      {
        internalType: "uint256",
        name: "claimId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldForRecipient",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldPerDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "yieldPerId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600160035534801561001557600080fd5b50612465806100256000396000f3fe6080604052600436106101ee5760003560e01c80636352211e1161010d578063a22cb465116100a0578063e00dd1611161006f578063e00dd161146105e8578063e985e9c5146105fe578063eaaf1fca14610639578063f60fabe514610659578063f74d4ef81461066f57600080fd5b8063a22cb4651461053c578063b02c43d01461055c578063c16845e7146105a5578063c87b56dd146105bb57600080fd5b806370a08231116100dc57806370a08231146104cf5780637d882097146104fc5780638a570a121461051257806395d89b411461052757600080fd5b80636352211e146104395780636c9980e11461046f5780636d43d9f11461048f578063703bafd5146104af57600080fd5b806323b872dd116101855780634b6d69d3116101545780634b6d69d3146103c657806353914b57146103e6578063564b81ef146104065780636281133d1461041957600080fd5b806323b872dd1461033b5780632d0335ab1461035b57806334d894c91461039157806340229cbb146103a657600080fd5b8063095ea7b3116101c1578063095ea7b3146102b85780630c53c51c146102da578063159b4962146102ed5780631ab2f6af1461030d57600080fd5b806301ffc9a7146101f3578063059b2a101461022857806306fdde0314610260578063081812fc14610282575b600080fd5b3480156101ff57600080fd5b5061021361020e366004612012565b610684565b60405190151581526020015b60405180910390f35b34801561023457600080fd5b50601154610248906001600160a01b031681565b6040516001600160a01b03909116815260200161021f565b34801561026c57600080fd5b506102756106d6565b60405161021f91906122b1565b34801561028e57600080fd5b5061024861029d366004612166565b6006602052600090815260409020546001600160a01b031681565b3480156102c457600080fd5b506102d86102d3366004611f4a565b610764565b005b6102756102e8366004611eda565b61084b565b3480156102f957600080fd5b506102d8610308366004612196565b610a1a565b34801561031957600080fd5b5061032d610328366004612166565b610a28565b60405190815260200161021f565b34801561034757600080fd5b506102d8610356366004611e69565b610a8e565b34801561036757600080fd5b5061032d610376366004611e1d565b6001600160a01b031660009081526008602052604090205490565b34801561039d57600080fd5b506102d8610c55565b3480156103b257600080fd5b506102d86103c1366004612166565b610e02565b3480156103d257600080fd5b5061032d6103e1366004612166565b610e22565b3480156103f257600080fd5b506102d86104013660046120bc565b610e2d565b34801561041257600080fd5b504661032d565b34801561042557600080fd5b50610213610434366004611f73565b610ea8565b34801561044557600080fd5b50610248610454366004612166565b6005602052600090815260409020546001600160a01b031681565b34801561047b57600080fd5b506102d861048a36600461203a565b610ff0565b34801561049b57600080fd5b5061032d6104aa366004612166565b61107d565b3480156104bb57600080fd5b50600f54610248906001600160a01b031681565b3480156104db57600080fd5b5061032d6104ea366004611e1d565b60046020526000908152604090205481565b34801561050857600080fd5b5061032d600b5481565b34801561051e57600080fd5b506102d86110a1565b34801561053357600080fd5b50610275611297565b34801561054857600080fd5b506102d8610557366004611ea4565b6112a4565b34801561056857600080fd5b50610590610577366004612166565b6009602052600090815260409020805460019091015482565b6040805192835260208301919091520161021f565b3480156105b157600080fd5b5061032d60135481565b3480156105c757600080fd5b506105db6105d6366004612166565b611310565b60405161021f91906122c4565b3480156105f457600080fd5b5061032d60035481565b34801561060a57600080fd5b50610213610619366004611e37565b600760209081526000928352604080842090915290825290205460ff1681565b34801561064557600080fd5b506102d8610654366004612196565b61140d565b34801561066557600080fd5b5061032d600a5481565b34801561067b57600080fd5b506102d8611417565b60006301ffc9a760e01b6001600160e01b0319831614806106b557506380ac58cd60e01b6001600160e01b03198316145b806106d05750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546106e3906123ba565b80601f016020809104026020016040519081016040528092919081815260200182805461070f906123ba565b801561075c5780601f106107315761010080835404028352916020019161075c565b820191906000526020600020905b81548152906001019060200180831161073f57829003601f168201915b505050505081565b6000818152600560205260409020546001600160a01b0316338114806107ad57506001600160a01b038116600090815260076020908152604080832033845290915290205460ff165b6107ef5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6001600160a01b0385166000908152600860205260409020546060906108779087904688888888610ea8565b6108cd5760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d6174636044820152600d60fb1b60648201526084016107e6565b6001600160a01b0386166000908152600860205260409020546108f19060016114ae565b6001600160a01b0387166000908152600860209081526040808320939093559151909182913091610926918a918c91016121ff565b60408051601f1981840301815290829052610940916121e3565b6000604051808303816000865af19150503d806000811461097d576040519150601f19603f3d011682016040523d82523d6000602084013e610982565b606091505b5091509150816109d45760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c0000000060448201526064016107e6565b7f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b883389604051610a079392919061227c565b60405180910390a1979650505050505050565b610a2482826114ba565b5050565b600a54600082815260096020526040812054909182916402540be40091610a4e91612354565b610a589190612334565b600084815260096020526040902060010154909150610a7d906402540be40090612334565b610a879082612373565b9392505050565b6000818152600560205260409020546001600160a01b03848116911614610ae45760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016107e6565b6001600160a01b038216610b2e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016107e6565b336001600160a01b0384161480610b5b57506000818152600660205260409020546001600160a01b031633145b80610b8957506001600160a01b038316600090815260076020908152604080832033845290915290205460ff165b610bc65760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016107e6565b6001600160a01b0380841660008181526004602090815260408083208054600019019055938616808352848320805460010190558583526005825284832080546001600160a01b03199081168317909155600690925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6011546001600160a01b0316610c9b5760405162461bcd60e51b815260206004820152600b60248201526a4e6f20537472617465677960a81b60448201526064016107e6565b6000612710600b54611388610cb09190612354565b610cba9190612334565b90506000600e5482610ccc9190612373565b905080600e6000828254610ce0919061231c565b9250508190555080600d6000828254610cf9919061231c565b9250508190555080600c6000828254610d129190612373565b9091555050600f5460115460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b390604401602060405180830381600087803b158015610d6757600080fd5b505af1158015610d7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9f9190611ff6565b5060115460405163b6b55f2560e01b8152600481018390526001600160a01b039091169063b6b55f2590602401600060405180830381600087803b158015610de657600080fd5b505af1158015610dfa573d6000803e3d6000fd5b505050505050565b6000610e0d8261107d565b9050610e198183611629565b610a24826118a5565b60006106d082611972565b60105415610e3a57600080fd5b610e4686868686610ff0565b6040805160608101825261ffff93909316808452600360208501526001600160a01b039290921692018290526012805463ffffffff19169091176203000017640100000000600160c01b03191664010000000090920291909117905550505050565b600080610f2588308989604051602001610ec59493929190612236565b60408051601f1981840301815282825280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000084830152603c8085019190915282518085039091018152605c909301909152815191012090565b6040805160008082526020820180845284905260ff87169282019290925260608101889052608081018790529192509060019060a0016020604051602081039080840390855afa158015610f7d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610fd45760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016107e6565b6001600160a01b038a8116911614915050979650505050505050565b601054156110365760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e48125b9a5d1a585b1a5e9959606a1b60448201526064016107e6565b6110408484611ab7565b601180546001600160a01b039283166001600160a01b031991821617909155600f8054939092169216919091179055505060016003819055601055565b600061108882610a28565b6000838152600960205260409020546106d0919061231c565b600c54600f546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a082319060240160206040518083038186803b1580156110e957600080fd5b505afa1580156110fd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611121919061217e565b61112b9190612373565b905080600c600082825461113f919061231c565b90915550506011546000906001600160a01b031661115e5760006111f1565b600d54601160009054906101000a90046001600160a01b03166001600160a01b031663192366376040518163ffffffff1660e01b815260040160206040518083038186803b1580156111af57600080fd5b505afa1580156111c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e7919061217e565b6111f19190612373565b905080600d6000828254611205919061231c565b9091555060009050611217828461231c565b601254909150600090612710906112329061ffff1684612354565b61123c9190612334565b90508060136000828254611250919061231c565b9091555050600b546112628284612373565b611271906402540be400612354565b61127b9190612334565b600a600082825461128c919061231c565b909155505050505050565b600180546106e3906123ba565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61134b6040518060a001604052806060815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b6040518060a0016040528060008054611363906123ba565b80601f016020809104026020016040519081016040528092919081815260200182805461138f906123ba565b80156113dc5780601f106113b1576101008083540402835291602001916113dc565b820191906000526020600020905b8154815290600101906020018083116113bf57829003601f168201915b50505091835250503060208201526040016113f68461107d565b815260200183815260200160008152509050919050565b610a248183611629565b600f5460125460135460405163a9059cbb60e01b81526001600160a01b0364010000000090930483166004820152602481019190915291169063a9059cbb90604401602060405180830381600087803b15801561147357600080fd5b505af1158015611487573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ab9190611ff6565b50565b6000610a87828461231c565b6000818152600560205260409020546001600160a01b03166114da611ade565b6001600160a01b0316146114ed57600080fd5b600b54156114fd576114fd6110a1565b6000818152600960205260408120805484929061151b90849061231c565b9091555050600a5461152d9083612354565b6000828152600960205260408120600101805490919061154e90849061231c565b9250508190555081600b6000828254611567919061231c565b9250508190555081600c6000828254611580919061231c565b9091555050600f546001600160a01b03166323b872dd61159e611ade565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101859052606401602060405180830381600087803b1580156115ec57600080fd5b505af1158015611600573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116249190611ff6565b505050565b6116316110a1565b6000818152600560205260409020546001600160a01b0316611651611ade565b6001600160a01b031614801561166f575061166b8161107d565b8211155b61167857600080fd5b600f546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156116bc57600080fd5b505afa1580156116d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f4919061217e565b905060008061170284610a28565b90508085111561178a576117168186612373565b600085815260096020526040812080549294508492909190611739908490612373565b9250508190555081600b60008282546117529190612373565b9091555050600a546000858152600960205260409020546117739190612354565b6000858152600960205260409020600101556117c0565b611799856402540be400612354565b600085815260096020526040812060010180549091906117ba90849061231c565b90915550505b60008386116117d05760006117da565b6117da8487612373565b90508015611803576117eb81611b3d565b82600e60008282546117fd9190612373565b90915550505b600f546001600160a01b031663a9059cbb61181c611ade565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101899052604401602060405180830381600087803b15801561186457600080fd5b505af1158015611878573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189c9190611ff6565b50505050505050565b6000818152600560205260409020546001600160a01b0316806118f75760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016107e6565b6001600160a01b038116600081815260046020908152604080832080546000190190558583526005825280832080546001600160a01b031990811690915560069092528083208054909216909155518492907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080611988611980611ade565b600354611bb5565b600b549091501561199b5761199b6110a1565b6000818152600960205260409020839055600a546119b99084612354565b600082815260096020526040812060010180549091906119da90849061231c565b9250508190555082600b60008282546119f3919061231c565b9250508190555082600c6000828254611a0c919061231c565b9091555050600f546001600160a01b03166323b872dd611a2a611ade565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015230602482015260448101869052606401602060405180830381600087803b158015611a7857600080fd5b505af1158015611a8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ab09190611ff6565b5092915050565b8051611aca906001906020840190611cd0565b508151611624906000906020850190611cd0565b600033301415611b3557600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150611b3a9050565b503390565b90565b601154604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b158015611b8357600080fd5b505af1158015611b97573d6000803e3d6000fd5b5050505080600d6000828254611bad9190612373565b909155505050565b60006001600160a01b038316611c015760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016107e6565b6000828152600560205260409020546001600160a01b031615611c575760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016107e6565b6001600160a01b038316600081815260046020908152604080832080546001908101909155600380549091019055858352600590915280822080546001600160a01b0319168417905551849291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a450919050565b828054611cdc906123ba565b90600052602060002090601f016020900481019282611cfe5760008555611d44565b82601f10611d1757805160ff1916838001178555611d44565b82800160010185558215611d44579182015b82811115611d44578251825591602001919060010190611d29565b50611d50929150611d54565b5090565b5b80821115611d505760008155600101611d55565b80356001600160a01b0381168114611d8057600080fd5b919050565b600082601f830112611d95578081fd5b813567ffffffffffffffff80821115611db057611db061240b565b604051601f8301601f19908116603f01168101908282118183101715611dd857611dd861240b565b81604052838152866020858801011115611df0578485fd5b8360208701602083013792830160200193909352509392505050565b803560ff81168114611d8057600080fd5b600060208284031215611e2e578081fd5b610a8782611d69565b60008060408385031215611e49578081fd5b611e5283611d69565b9150611e6060208401611d69565b90509250929050565b600080600060608486031215611e7d578081fd5b611e8684611d69565b9250611e9460208501611d69565b9150604084013590509250925092565b60008060408385031215611eb6578182fd5b611ebf83611d69565b91506020830135611ecf81612421565b809150509250929050565b600080600080600060a08688031215611ef1578081fd5b611efa86611d69565b9450602086013567ffffffffffffffff811115611f15578182fd5b611f2188828901611d85565b9450506040860135925060608601359150611f3e60808701611e0c565b90509295509295909350565b60008060408385031215611f5c578182fd5b611f6583611d69565b946020939093013593505050565b600080600080600080600060e0888a031215611f8d578182fd5b611f9688611d69565b96506020880135955060408801359450606088013567ffffffffffffffff811115611fbf578283fd5b611fcb8a828b01611d85565b9450506080880135925060a08801359150611fe860c08901611e0c565b905092959891949750929550565b600060208284031215612007578081fd5b8151610a8781612421565b600060208284031215612023578081fd5b81356001600160e01b031981168114610a87578182fd5b6000806000806080858703121561204f578182fd5b843567ffffffffffffffff80821115612066578384fd5b61207288838901611d85565b95506020870135915080821115612087578384fd5b5061209487828801611d85565b9350506120a360408601611d69565b91506120b160608601611d69565b905092959194509250565b60008060008060008060c087890312156120d4578384fd5b863567ffffffffffffffff808211156120eb578586fd5b6120f78a838b01611d85565b9750602089013591508082111561210c578586fd5b5061211989828a01611d85565b95505061212860408801611d69565b935061213660608801611d69565b9250608087013561ffff8116811461214c578283fd5b915061215a60a08801611d69565b90509295509295509295565b600060208284031215612177578081fd5b5035919050565b60006020828403121561218f578081fd5b5051919050565b600080604083850312156121a8578182fd5b50508035926020909101359150565b600081518084526121cf81602086016020860161238a565b601f01601f19169290920160200192915050565b600082516121f581846020870161238a565b9190910192915050565b6000835161221181846020880161238a565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b8481526bffffffffffffffffffffffff198460601b1660208201528260348201526000825161226c81605485016020870161238a565b9190910160540195945050505050565b6001600160a01b038481168252831660208201526060604082018190526000906122a8908301846121b7565b95945050505050565b602081526000610a8760208301846121b7565b602081526000825160a060208401526122e060c08401826121b7565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b6000821982111561232f5761232f6123f5565b500190565b60008261234f57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561236e5761236e6123f5565b500290565b600082821015612385576123856123f5565b500390565b60005b838110156123a557818101518382015260200161238d565b838111156123b4576000848401525b50505050565b600181811c908216806123ce57607f821691505b602082108114156123ef57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b80151581146114ab57600080fdfea264697066735822122043a9da85d379d700ac0339047fb32807413ee9cb0d1c47fcee1f1a71e4a2f4c964736f6c63430008040033";

type CharityVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CharityVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CharityVault__factory extends ContractFactory {
  constructor(...args: CharityVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CharityVault";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CharityVault> {
    return super.deploy(overrides || {}) as Promise<CharityVault>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CharityVault {
    return super.attach(address) as CharityVault;
  }
  connect(signer: Signer): CharityVault__factory {
    return super.connect(signer) as CharityVault__factory;
  }
  static readonly contractName: "CharityVault";
  public readonly contractName: "CharityVault";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CharityVaultInterface {
    return new utils.Interface(_abi) as CharityVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CharityVault {
    return new Contract(address, _abi, signerOrProvider) as CharityVault;
  }
}
